{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vvyvi\\\\Desktop\\\\apihub\\\\src\\\\Components\\\\country.js\";\nimport React, { Component } from 'react';\n\nclass Country extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      text: \"\",\n      country: \"\"\n    };\n    this.updateCity = this.updateCity.bind(this);\n    this.updateText = this.updateText.bind(this);\n    this.loadCity = this.loadCity.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.updateCity);\n  }\n\n  updateCity() {\n    fetch('https://cors-anywhere.herokuapp.com/gd.geobytes.com/GetCityDetails').then(response => response.json()).then(data => {\n      this.loadCity(data.geobytescountry);\n      return data;\n    }).then(data => this.setState({\n      country: data.geobytescountry\n    })).catch(error => this.setState({\n      text: 'error fetching data ' + error.message\n    }));\n  }\n\n  loadCity(value) {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${value}&appid=d0ca8d3b92279927c97dbc726daa6886`).then(response => response.json()).then(data => {\n      this.assignValue(data.name);\n      return data;\n    }).then(data => this.setState({\n      city: data.name,\n      text: data.weather[0].description\n    })).catch(error => this.setState({\n      text: 'error fetching data ' + error.message\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel weather\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"location, type if not applicable\", /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.updateText,\n      type: \"text\",\n      ref: \"wea\",\n      id: \"wea\",\n      onClick: this.removeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, this.state.text));\n  }\n\n}\n\nexport default Country;","map":{"version":3,"sources":["C:/Users/vvyvi/Desktop/apihub/src/Components/country.js"],"names":["React","Component","Country","constructor","state","text","country","updateCity","bind","updateText","loadCity","componentDidMount","window","addEventListener","fetch","then","response","json","data","geobytescountry","setState","catch","error","message","value","assignValue","name","city","weather","description","render","removeValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACC,SAA5B,CAAqC;AAEjCE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDG,EAAAA,iBAAiB,GAAG;AACbC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,KAAKN,UAArC;AACN;;AAEDA,EAAAA,UAAU,GAAG;AACZO,IAAAA,KAAK,CAAC,oEAAD,CAAL,CACIC,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IAAI;AAAC,WAAKR,QAAL,CAAcQ,IAAI,CAACC,eAAnB;AAAqC,aAAOD,IAAP;AAAY,KAFnE,EAGIH,IAHJ,CAGSG,IAAI,IAAI,KAAKE,QAAL,CAAc;AACXd,MAAAA,OAAO,EAAEY,IAAI,CAACC;AADH,KAAd,CAHjB,EAMIE,KANJ,CAMUC,KAAK,IAAI,KAAKF,QAAL,CAAc;AAAEf,MAAAA,IAAI,EAAE,yBAAuBiB,KAAK,CAACC;AAArC,KAAd,CANnB;AAOA;;AAEDb,EAAAA,QAAQ,CAACc,KAAD,EAAO;AACXV,IAAAA,KAAK,CAAE,qDAAoDU,KAAM,yCAA5D,CAAL,CACET,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOG,IAAI,IAAI;AAAC,WAAKO,WAAL,CAAiBP,IAAI,CAACQ,IAAtB;AAA6B,aAAOR,IAAP;AAAa,KAF1D,EAGEH,IAHF,CAGOG,IAAI,IAAI,KAAKE,QAAL,CAAc;AACpBO,MAAAA,IAAI,EAAET,IAAI,CAACQ,IADS;AAEpBrB,MAAAA,IAAI,EAAEa,IAAI,CAACU,OAAL,CAAa,CAAb,EAAgBC;AAFF,KAAd,CAHf,EAOER,KAPF,CAOQC,KAAK,IAAI,KAAKF,QAAL,CAAc;AAAEf,MAAAA,IAAI,EAAE,yBAAuBiB,KAAK,CAACC;AAArC,KAAd,CAPjB;AAQH;;AAEDO,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAEI;AAAO,MAAA,QAAQ,EAAE,KAAKrB,UAAtB;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAA8C,MAAA,GAAG,EAAC,KAAlD;AAAwD,MAAA,EAAE,EAAC,KAA3D;AAAiE,MAAA,OAAO,EAAE,KAAKsB,WAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAK3B,KAAL,CAAWC,IADZ,CAHJ,CADJ;AASH;;AAhDgC;;AAmDrC,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Country extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            text: \"\",\r\n            country: \"\"\r\n        }\r\n        this.updateCity = this.updateCity.bind(this);\r\n        this.updateText = this.updateText.bind(this);\r\n        this.loadCity = this.loadCity.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n           window.addEventListener('load', this.updateCity);\r\n    }\r\n\r\n    updateCity() {\r\n     fetch('https://cors-anywhere.herokuapp.com/gd.geobytes.com/GetCityDetails')\r\n        .then(response => response.json())\r\n        .then(data => {this.loadCity(data.geobytescountry); return data})\r\n        .then(data => this.setState({\r\n                         country: data.geobytescountry\r\n                     }))\r\n        .catch(error => this.setState({ text: 'error fetching data '+error.message }))\r\n    }\r\n\r\n    loadCity(value){\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${value}&appid=d0ca8d3b92279927c97dbc726daa6886`)\r\n         .then(response => response.json())\r\n         .then(data => {this.assignValue(data.name); return data;})\r\n         .then(data => this.setState({\r\n                 city: data.name,\r\n                 text: data.weather[0].description\r\n             }))\r\n         .catch(error => this.setState({ text: 'error fetching data '+error.message }))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"panel weather\">\r\n                location, type if not applicable\r\n                <input onChange={this.updateText} type=\"text\" ref=\"wea\" id=\"wea\" onClick={this.removeValue}></input>\r\n                <div>\r\n                {this.state.text}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Country"]},"metadata":{},"sourceType":"module"}